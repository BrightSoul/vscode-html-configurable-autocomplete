{
	"name": "html-configurable-autocomplete",
	"displayName": "html-configurable-autocomplete",
	"description": "Autocomplete your HTML content by providing simple matching rules",
	"version": "1.0.0",
	"engines": {
		"vscode": "^1.47.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:html"
	],
	"main": "./extension.js",
	"contributes": {
		"configuration": {
			"title": "HtmlConfigurableAutocomplete",
			"properties": {
				"htmlConfigurableAutocomplete.enable": {
					"type": "boolean",
					"default": true,
					"description": "Enables the estension. Optional, default is true."
				},
				"htmlConfigurableAutocomplete.completionItemProviders": {
					"type": "array",
					"default": [],
					"description": "Completion item providers ruleset",
					"items": {
						"type": "object",
						"title": "Completion item provider rule",
						"properties": {
							"enable": {
								"type": "boolean",
								"default": true,
								"description": "Enable/disable this matching rule. Optional, defaults to true."
							},
							"triggerCharacters": {
								"type": "array",
								"description": "An array of one or more characters which will activate completion. Required."
							},
							"triggerRegexp": {
								"type": "string",
								"description": "A filtering regexp activating item completion only when the cursor is inside one of its matches. Optional."
							},
							"maxFiles": {
								"type": "number",
								"default": 50,
								"description": "Maximum number of files to scan for completion items. Optional, defaults to 50."
							},
							"maxItems": {
								"type": "number",
								"default": 50,
								"description": "Maximum number of completion items provided. Optional, defaults to 50."
							},
							"maxItemsPerFile": {
								"type": "number",
								"default": 50,
								"description": "Maximum number of completion items provided by each file. Optional, defaults to 50."
							},
							"itemKind": {
								"type": "string",
								"default": "Field",
								"enum": [
									"Class",
									"Color",
									"Constant",
									"Constructor",
									"Enum",
									"EnumMember",
									"Event",
									"Field",
									"File",
									"Folder",
									"Function",
									"Interface",
									"Issue",
									"Keyword",
									"Method",
									"Module",
									"Operator",
									"Property",
									"Reference",
									"Snippet",
									"Struct",
									"Text",
									"TypeParameter",
									"Unit",
									"User",
									"Value",
									"Variable"
								],
								"description": "The item kind affects which icon will be displayed beside the completion item. Optional, defaults to 'Field'."
							},
							"includeGlobPattern": {
								"type": "string",
								"default": "",
								"description": "All files matching this glob pattern will be scanned for completion items. This pattern is relative to the workspace folder. Optional, defaults to '' (no file will be scanned)."
							},
							"excludeGlobPattern": {
								"type": "string",
								"default": "",
								"description": "All files matching this glob pattern will be excluded from the scanning of completion items. This pattern is relative to the workspace folder. Optional, defaults to '' (no files excluded)."
							},
							"contentRegexp": {
								"type": "string",
								"default": "",
								"description": "A regexp used to extract completion items from content. The first capture group will be used, if present, otherwise the whole match is used. Required."
							},
							"staticItems": {
								"type": "array",
								"default": [],
								"description": "A list of statically provided completion items. Optional, defaults to an empty array."
							}
						}
					}
				},
				"htmlConfigurableAutocomplete.definitionProviders": {
					"type": "array",
					"default": [],
					"description": "Definition providers ruleset",
					"items": {
						"type": "object",
						"title": "Definition provider rule",
						"properties": {
							"enable": {
								"type": "boolean",
								"default": "true",
								"description": "Enable/disable this matching rule. Optional, defaults to true."
							},
							"definitionRegexp": {
								"type": "string",
								"description": "Definitions will be scanned only when when the cursor is at a position matched by this regexp. Required."
							},
							"includeGlobPattern": {
								"type": "string",
								"description": "All files matching this glob pattern will be scanned for definitions. Required."
							},
							"excludeGlobPattern": {
								"type": "string",
								"default": "",
								"description": "All files matching this glob pattern will be excluded from the scanning of definitions. Optional, defaults to '' (no files excluded)."
							},
							"contentRegexp": {
								"type": "string",
								"description": "A regexp used to extract definition from content. The first match position will be used. Required."
							}
						}
					}
				}
			}
		}
	},
	"scripts": {
		"lint": "eslint .",
		"pretest": "npm run lint",
		"test": "jest"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/jest": "^26.0.7",
		"@types/node": "^13.11.0",
		"@types/vscode": "^1.47.0",
		"babel-eslint": "^10.1.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"jest": "^26.1.0",
		"typescript": "^3.8.3"
	}
}